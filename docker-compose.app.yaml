version: "3"

services:
  public-client:
    build:
      dockerfile: ./docker/Dockerfile.public-client
      context: ./
      args:
        VITE_PUBLIC_CLIENT_ID: ${PUBLIC_CLIENT_ID}
        VITE_KEYCLOAK_AUTH_SERVER_REALM: ${KEYCLOAK_AUTH_SERVER_REALM}
        VITE_KEYCLOAK_AUTH_SERVER_URL: ${KEYCLOAK_AUTH_SERVER_URL}
        VITE_API_BASE_URL: ${API_BASE_URL}
    depends_on:
      - todo-api
    pull_policy: "build"
    expose:
      - 5173
    networks:
      - internal
      - traefik_default
    labels:
      traefik.enable: "true"

      traefik.http.routers.guestbook-frontend.entrypoints: "https"
      traefik.http.routers.guestbook-frontend.tls: "true"
      traefik.http.routers.guestbook-frontend.rule: "Host(`${TRAEFIK_FRONTEND_HOST}`)"
      traefik.http.routers.guestbook-frontend.tls.certresolver: "acme"
      traefik.http.services.guestbook-frontend.loadbalancer.server.port: 5173

  todo-api:
    build:
      dockerfile: ./docker/Dockerfile.todo-api
      context: ./
      args:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_HOST: ${POSTGRES_HOST}
    expose:
      - 3000
    environment:
      KEYCLOAK_AUTH_SERVER_URL: ${KEYCLOAK_AUTH_SERVER_URL}
      KEYCLOAK_AUTH_SERVER_REALM: ${KEYCLOAK_AUTH_SERVER_REALM}
      CONFIDENTIAL_CLIENT_ID: ${CONFIDENTIAL_CLIENT_ID}
      CONFIDENTIAL_CLIENT_SECRET: ${CONFIDENTIAL_CLIENT_SECRET}
      FRONTEND_BASE_URL: ${FRONTEND_BASE_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    pull_policy: "build"
    networks:
      - internal
      - traefik_default
    labels:
      traefik.enable: "true"

      traefik.http.routers.guestbook-backend.entrypoints: "https"
      traefik.http.routers.guestbook-backend.tls: "true"
      traefik.http.routers.guestbook-backend.rule: "Host(`${TRAEFIK_BACKEND_HOST}`)"
      traefik.http.routers.guestbook-backend.tls.certresolver: "acme"
  db:
    image: docker.io/postgres:15-alpine
    volumes:
      - todo_api_db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - todo-api
    networks:
      - internal
      - db
  pgadmin:
    image: docker.io/dpage/pgadmin4:7
    ports:
      - "3023:80"
    depends_on:
      - db
    networks:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
volumes:
  todo_api_db:
    driver: local

networks:
  traefik_default:
    external: true
  internal:
  db:
